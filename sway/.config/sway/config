# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

set $int eDP-1
set $ext HDMI-A-2

# Your preferred terminal emulator
set $term konsole
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -m $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) -show drun -run-command 'swaymsg exec -- {cmd}'
set $menu rofi -m $(swaymsg -t get_outputs | jq 'map(select(.active) | .focused) | index(true)') -show drun -run-command 'swaymsg exec -- {cmd}'

set $lock ~/.local/bin/scripts/lock.sh
set $power ~/.config/rofi/modi/power
set $wifi ~/.config/rofi/modi/nmcli
set $screenshot grim ~/Изображения/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip slurp | grim -g - ~/Изображения/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $background ~/Изображения/Обои/рисунки-мультфильмы-жил-был-пес-минимализм-1500172.jpeg

set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# workspaces
set $ws1   1:
set $ws2   2:
set $ws3   3:
set $ws4   4:4
set $ws5   5:5
set $wsF1  6:
set $wsF2  7:
set $wsF3  8:
set $wsF4  9:9
set $wsF5  10:

# Default workspaces for common programs
assign [app_id="firefox"] $wsF1
assign [instance="^jetbrains-goland$"] $ws2
assign [instance="^code$"] $ws2
assign [app_id="telegramdesktop"] $ws3
assign [app_id="thunderbird"] $wsF2
assign [class="^Spotify$"] $wsF3
assign [app_id="org.kde.konsole" title="~ : ranger — Konsole"] $ws1
assign [app_id="org.kde.konsole" title="~ : htop — Konsole"] $ws1
assign [instance="^vlc$"] $wsF5
assign [app_id="com.chatterino.https:\/\/www.chatterino"] $wsF5

# Font
font pango:Sans 12

# Window borders
default_border pixel 1
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 5

# Autostart
exec --no-startup-id mako
exec --no-startup-id gammastep-indicator
exec telegram-desktop
exec firefox
exec $term
exec $term -e 'htop' &
exec $term -e 'ranger' &

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $background fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output $int position 0,0 resolution 1920x1080
output $ext position 1920,0 resolution 1440x900

workspace $ws1 output $int
workspace $ws2 output $int
workspace $ws3 output $int
workspace $ws4 output $int
workspace $ws5 output $int
workspace $wsF1 output $ext
workspace $wsF2 output $ext
workspace $wsF3 output $ext
workspace $wsF4 output $ext
workspace $wsF5 output $ext

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle \
    timeout 300 'exec $lock' \
    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'exec $lock'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
    xkb_layout us,ru
    xkb_numlock enabled
    xkb_variant nodeadkeys
    xkb_options grp:shifts_toggle
    xkb_file $HOME/.config/xkb/keymap.xkb
}

input type:pointer {
    accel_profile flat
    pointer_accel 0
}

input type:touchpad {
    drag enabled
    dwt enabled
    natural_scroll enabled
    scroll_method two_finger
    tap enabled
    drag_lock enabled
    scroll_factor 0.12
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    
    bindsym $mod+Print exec $screenshot
    bindsym $mod+Shift+Print exec $screenclip

    bindsym --to-code {
        # Kill focused window
        $mod+Shift+q kill

        # Start your launcher
        $mod+d exec $menu

        # Reload the configuration file
        $mod+Shift+c reload

        $mod+l exec $lock
    }

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    bindsym $mod+Escape exec $power
    bindsym $mod+End exec $wifi

    # Notifications
    bindsym Control+Space exec makoctl dismiss
    bindsym Control+Shift+Space exec makoctl dismiss --all

    bindsym --locked {
        # Multimedia
        XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
        XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
        $mod+F11 exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
        $mod+F12 exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
        XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
        $mod+F6 exec playerctl play-pause
        $mod+F7 exec playerctl previous
        $mod+F8 exec playerctl next

        # Brightness controls
        XF86MonBrightnessUp exec brightnessctl s 10%+
        XF86MonBrightnessDown exec brightnessctl s 10%-
        $mod+F9 exec brightnessctl s 10%-
        $mod+F10 exec brightnessctl s 10%+
    }

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1   workspace $ws1
    bindsym $mod+2   workspace $ws2
    bindsym $mod+3   workspace $ws3
    bindsym $mod+4   workspace $ws4
    bindsym $mod+5   workspace $ws5
    bindsym $mod+F1  workspace $wsF1
    bindsym $mod+F2  workspace $wsF2
    bindsym $mod+F3  workspace $wsF3
    bindsym $mod+F4  workspace $wsF4
    bindsym $mod+F5  workspace $wsF5

    # move focused container to workspace
    bindsym $mod+Shift+1    move container to workspace $ws1
    bindsym $mod+Shift+2    move container to workspace $ws2
    bindsym $mod+Shift+3    move container to workspace $ws3
    bindsym $mod+Shift+4    move container to workspace $ws4
    bindsym $mod+Shift+5    move container to workspace $ws5
    bindsym $mod+Shift+F1   move container to workspace $wsF1
    bindsym $mod+Shift+F2   move container to workspace $wsF2
    bindsym $mod+Shift+F3   move container to workspace $wsF3
    bindsym $mod+Shift+F4   move container to workspace $wsF4
    bindsym $mod+Shift+F5   move container to workspace $wsF5
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code {
        $mod+b splith
        $mod+v splitv

        # Switch the current container between different layout styles
        $mod+s layout stacking
        $mod+w layout tabbed
        $mod+e layout toggle split

        # Make the current focus fullscreen
        $mod+f fullscreen

        # Move focus to the parent container
        $mod+a focus parent
    }


    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym --to-code {
        l exec $lock, mode "default"
        e exit
        s exec --no-startup-id systemctl suspend, mode "default"
        r exec --no-startup-id systemctl reboot, mode "default"
        Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
        Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"
    }

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+Shift+e mode "$mode_system"

exec_always ~/.config/waybar/waybar.sh


include ~/.config/sway/$(hostname)/*
